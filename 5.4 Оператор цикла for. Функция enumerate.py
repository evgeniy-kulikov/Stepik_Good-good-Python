# Примеры работы оператора цикла for. Функция enumerate

"""
Вводится строка. Необходимо найти все индексы фрагмента "ра" во введенной строке.
Вывести в строку через пробелы найденные индексы. Если этот фрагмент ни разу не будет найден, то вывести значение -1.
"""

s = input().lower()
cnt = 0
for i in range(len(s) - 1):
    if s[i] + s[i + 1] == 'ра':
        cnt += 1
        print(i, end=' ')
if not cnt:
    print(-1)

"""
Вводится строка с номером телефона. Ожидается формат ввода:
+7(xxx)xxx-xx-xx
где x - это цифра.
Размер введенных символов считается верным (т.е. не может быть, чтобы отсутствовала какая-либо цифра или была лишняя). 
Необходимо проверить, что введенная строка соответствует этому формату. 
Вывести ДА, если соответствует и НЕТ - в противном случае.
"""
s = input()
if len(s) == 16 and s[0] == '+' and s[1] == '7' and s[2] == '(' and s[6] == ')' and s[10] == '-' and s[13] == '-' \
        and s.translate({ord(i): None for i in '+()-'}).isdigit():
    print('ДА')
else:
    print('НЕТ')

# хорошее решение
num = '+7(xxx)xxx-xx-xx'
s = input()
count = 0
if len(s) == 16:
    for el in range(16):
        if s[el] == num[el] or (num[el] == 'x' and s[el].isdigit()):
            count += 1
print('ДА' if count == 16 else 'НЕТ')

"""
 В виде строки записано арифметическое выражение, например:
"10 + 25 - 12"  или  "10 + 25 - 12 +20- 1+3"  и т. д. То есть, количество действий может быть разным.
Необходимо выполнить вычисление и результат отобразить на экране. 
Полагается, что в качестве арифметических операций здесь используется только сложение (+) и вычитание (-), 
а в качестве операндов - целые неотрицательные числа. Следует учесть, 
что эти операторы могут быть записаны как с пробелами, так и без них.
"""
s = input().split()
s = ''.join(s)  # Как оказалось, даже split()  и  join() можно было не делать.
print(eval(s))

# мудрое решение
s = '10 +25 -   12'
b = s.replace(' ', '').replace('-', '+-').split('+')
# 10+25-12  # replace(' ', '') убираем пробелы
# 10+25+-12  # .replace('-', '+-')  добавляем "+" к каждому "-"
# ['10', '25', '-12']  # .split('+')  режем по каждому "+"
print(sum(map(int, b)))  # "map(int, b)"  превращаем строки в числа и суммируем их "sum(map()"

# тоже, но без sum(map())
s = input().strip().replace(" ", "")
sum = 0
lst = s.replace("-", "+-").split("+")
for el in lst:
    sum += int(el)
print(sum)

"""
Вводится список в виде целых чисел в одну строку через пробел. 
Необходимо сначала сформировать список на основе введенной строки, а затем, каждое значение этого списка изменить, 
возведя в квадрат. Отобразить результат на экране в виде строки полученных чисел, записанных через пробел
 Input: 8 -11 4 3 6
 Output: 64 121 16 9 36
"""
lst = list(map(int, input().split()))
for i, val in enumerate(lst):
    lst[i] = val ** 2
print(*lst)

"""
Вводится список в виде целых чисел в одну строку через пробел. 
Сначала нужно сформировать список из введенной строки. 
Затем, каждый элемент этого списка продублировать один раз. 
Результат отобразить на экране в виде строки полученных чисел, записанных через пробел.
 Input: 8 11 2
 Output: 8 8 11 11 2 2
"""
lst = list(map(int, input().split()))
for i, _ in enumerate(lst):
    if i % 2 == 0:
        lst.insert(i + 1, lst[i])
print(*lst)

# точно по условию задачи
lst = list(map(int, input().split()))
lst_new = []
for el in lst:
    lst_new += [el] * 2
print(*lst_new)

"""
Вводится список в виде вещественных чисел в одну строку через пробел. 
С помощью цикла for необходимо найти наименьшее значение в этом списке.
Реализовать программу без использования функции min, max и сортировки.
"""
lst = list(map(float, input().split()))
el_min = lst[0]
for el in lst:
    if el < el_min:
        el_min = el
print(el_min)
