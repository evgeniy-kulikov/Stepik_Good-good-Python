# 6.6 Генераторы множеств и словарей
""""""

"""
Генераторы множеств

setA = {el for el in range(1, 5)}
{1, 2, 3, 4}

setA = {el * 3 for el in range(1, 5)}
{9, 3, 12, 6}

lst = [1, 2, "1", "2", 3, 4]
setA = {int(el) for el in lst}
{1, 2, 3, 4}

lst = [1, 2, "1", "2", 3, 4, -5, "-7"]
setA = {int(el) for el in lst if int(el) > 0}
{1, 2, 3, 4}

"""

"""
Генераторы словарей

d = {el: el * 3 for el in range(1, 5)}
{1: 3, 2: 6, 3: 9, 4: 12}

dict_in = {"неудовл.": 2, "удовл.": "3", "хорошо": 4, "отлично": "5"}
dict_out = {key.upper(): int(value) for key, value in dict_in.items()}
{'НЕУДОВЛ.': 2, 'УДОВЛ.': 3, 'ХОРОШО': 4, 'ОТЛИЧНО': 5}

Меняем местами ключи и значения:
dict_in = {"плохо": 1,"неудовл.": 2, "удовл.": "3", "хорошо": 4, "отлично": "5"}
dict_out = {int(value): key for key, value in dict_in.items()}
{1: 'плохо', 2: 'неудовл.', 3: 'удовл.', 4: 'хорошо', 5: 'отлично'}


Меняем местами ключи и значения + условие:
dict_in = {"плохо": 1,"неудовл.": 2, "удовл.": "3", "хорошо": 4, "отлично": "5"}
dict_out = {int(value): key for key, value in dict_in.items() if int(value) > 3}
{4: 'хорошо', 5: 'отлично'}
"""


#  *   *   *   *   *   TASK    *   *   *   *   *

"""
Вводится строка со списком оценок, например:
2 неудовлетворительно удовлетворительно хорошо отлично

Первая цифра - это числовое значение первой оценки. Остальные оценки имеют возрастающие на 1 числа. 
С помощью генератора словарей необходимо сформировать словарь d, 
где ключами будут выступать числа, а значениями - слова.
Например:
d = {2: 'неудовлетворительно', 3: 'удовлетворительно', 4: 'хорошо', 5: 'отлично'}

Вывести на экран значение сформированного словаря с ключом 4.
Input:  1 ужасно неудовлетворительно удовлетворительно прилично отлично
Output: прилично
"""
str_in = list(map(str, input().split()))
# str_in = ['0', 'безнадежно', 'ужасно', 'неудовлетворительно', 'удовлетворительно', 'прилично', 'отлично']
# str_in = ['1', 'ужасно', 'неудовлетворительно', 'удовлетворительно', 'прилично', 'отлично']
# str_in = ['2',  'неудовлетворительно', 'удовлетворительно', 'прилично', 'отлично']
# str_in = ['3', 'удовлетворительно', 'прилично', 'отлично']
# str_in = ['4', 'прилично', 'отлично']

d = {key: val for key, val in enumerate(str_in[1:], int(str_in[0]))}
# d = {el[0]: el[1] for el in enumerate(str_in[1:], int(str_in[0]))}
print(d.get(4))



"""
На автомойку в течение квартала заезжали машины. Их гос. номера фиксировались в журнале, следующим образом (пример):
Е220СК
А120МВ
В101АА
Е220СК
А120МВ
На основе такого списка через генератор множеств сформировать список уникальных машин. 
На экран вывести число уникальных машин.
P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
Input:  А323ГД
        Д456ВВ
        Б001ББ
        Д456ВВ
        С111СС
Output: 4
"""
import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['А323ГД', 'Д456ВВ', 'Б001ББ', 'Д456ВВ', 'С111СС']

set_out = {item for item in lst_in}
print(len(set_out))


"""
Вводится текст в одну строчку со словами через пробел. 
Используя генераторы множеств и словарей, сформировать словарь в формате:
{слово_1: количество_1, слово_2: количество_2, ..., слово_N: количество_N}

То есть, ключами выступают уникальные слова (без учета регистра), 
а значениями - число их встречаемости в тексте. На экран вывести значение словаря для слова (союза) 'и'. 
Если такого ключа нет, то вывести 0.
Input:  Хижина изба машина и снова хижина машина
Output: 4
"""
lst_in = list(map(str, input().lower().split()))
# lst_in = ['хижина', 'изба', 'машина', 'и', 'снова', 'хижина', 'машина']
set_out = {item for item in lst_in if len(item) > 2}
print(len(set_out))


"""
Вводится текст в одну строчку со словами через пробел. 
С помощью генератора множеств сформировать множество из уникальных слов 
без учета регистра и длина которых не менее трех символов. 
Вывести на экран размер этого множества.
Input:  И что сказать и что сказать и нечего и точка
Output: 4
"""
# lst_in = ['и', 'что', 'сказать', 'и', 'что', 'сказать', 'и', 'нечего', 'и', 'точка']

lst_in = input().lower().split()
d = {el: lst_in.count(el) for el in lst_in}
print(d.get('и', 0))

lst_in = list(map(str, input().lower().split()))
from collections import Counter
d = Counter(lst_in)
# Counter({'и': 4, 'что': 2, 'сказать': 2, 'нечего': 1, 'точка': 1})
print(d.get('и', 0))


"""
Вводится список книг книжного магазина в формате:
<автор 1>:<название 1>
...
<автор N>:<название N>

Авторы с названиями могут повторяться. 
Необходимо, используя генераторы, сформировать словарь с именем d вида:
{'автор 1': {'название 1', 'название 2', ..., 'название M'}, ..., 'автор K': {'название 1', 'название 2', ..., 'название S'}}

То есть, ключами выступают уникальные авторы, 
а значениями - множества с уникальными названиями книг соответствующего автора.
На экран ничего выводить не нужно, только сформировать словарь 
обязательно с именем d - он, далее будет проверяться в тестах!

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
Input:  Пушкин: Сказака о рыбаке и рыбке
        Есенин: Письмо к женщине
        Тургенев: Муму
        Пушкин: Евгений Онегин
        Есенин: Русь
Output: True
"""
import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['Пушкин: Сказака о рыбаке и рыбке', 'Есенин: Письмо к женщине', 'Тургенев: Муму', 'Пушкин: Евгений Онегин', 'Есенин: Русь']
lst_out = [el.split(": ") for el in lst_in]
# lst_out = [['Пушкин', 'Сказака о рыбаке и рыбке'], ['Есенин', 'Письмо к женщине'], ['Тургенев', 'Муму'], ['Пушкин', 'Евгений Онегин'], ['Есенин', 'Русь']]

d = {el[0]: {i[1] for i in lst_out if i[0] == el[0]} for el in lst_out}
# {'Пушкин': {'Сказака о рыбаке и рыбке', 'Евгений Онегин'}, 'Есенин': {'Письмо к женщине', 'Русь'}, 'Тургенев': {'Муму'}}
