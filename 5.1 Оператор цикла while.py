# 5.1 Оператор цикла while
"""
 Вводится целое положительное число n.
 Вычислить и вывести на экран сумму: 1 + 1/2 + 1/3 + ... + 1/n с точностью до тысячных (три знака после запятой)
"""
num = int(input())
n = 1
summ = 0
while n <= num:
    summ += 1 / n
    n += 1
print(round(summ, 3))

"""
 Вводится строка (слаг). Замените в этой строке все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-). 
 Результат преобразования строки выведите на экран
"""
s = input()
while '--' in s:
    s = s.replace('--', '-')
print(s)

"""
Вводится натуральное (то есть, целое положительное) число (от трехзначного и более). Найти произведение всех его цифр.
"""
num = int(input())
mult = 1
digit = 0
while num > 0:
    digit = num % 10
    mult *= digit
    num //= 10
print(mult)

# Короче
num = int(input())
mult = 1
while num > 0:
    mult *= (num % 10)
    num //= 10
print(mult)

"""
Последовательность Фибоначчи образуется так: 
первые два числа равны 1 и 1, а каждое последующее равно сумме двух предыдущих. 
Имеем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ... 
Постройте последовательность Фибоначчи длиной n (n вводится с клавиатуры)
"""
num = int(input()) - 1
n = 1
f = [1, 1]
while n < num:
    f.append(f[n] + f[n - 1])
    n += 1
print(*f)

"""
Одноклеточная амеба каждые 3 часа делится на 2 клетки. 
Определить, сколько клеток будет через n часов (n - целое положительное число, вводимое с клавиатуры). 
Считать, что изначально была одна амеба.
"""
hour = int(input())
cell = 1
while hour >= 3:
    cell *= 2
    hour -= 3
print(cell)

"""
Вводятся два натуральных четных числа n и m в одну строчку через пробел, причем n < m. 
Напечатать все нечетные числа из интервала [n, m]. Задачу решить без применения условного оператора.
"""
n, m = map(int, input().split())
n = (n, n + 1)[n % 2 == 0]
while n <= m:
    print(n, end=' ')
    n += 2

# другое решение
n, m = map(int, input().split())
while n < m:
    print(n + (n + 1) % 2, end=' ')
    n += 2