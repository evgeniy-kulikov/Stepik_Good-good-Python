# 5.5 Итератор и итерируемые объекты. Функции iter и next

"""
Вводится список городов в одну строчку через пробел.
Необходимо создать итератор для этого списка и с помощью итератора
вывести на экран в столбик первые два значения (названия городов).
Input: Москва Лондон Берлин Пекин
Output:
Москва
Лондон
"""
# через итератор iter()
lst = list(map(str, input().split()))
iter_lst = iter(lst)
print(next(iter_lst), next(iter_lst), end='')

# через enumerate()
lst = list(map(str, input().split()))
for i, el in enumerate(lst):
    if i < 2:
        print(el)

"""
Вводится строка. Нужно создать итератор для перебора символов этой строки. 
Затем, перебрать через созданный итератор все символы до первого пробела. 
В процессе перебора символы выводить на экран в одну строчку друг за другом (без пробелов). 
Гарантируется, что во введенной строке имеется хотя бы один пробел.

Sample Input:   Возможно-это будет полезно
Sample Output:  Возможно-это
"""
# Странный гибрид "for" и "next()". Не делайте так!
lst = input()
iter_s = iter(lst)
for el in lst:
    if el == ' ':
        break
    else:
        print(next(iter_s), end='')

# решение по теме
lst = list(map(str, input().split()))
it_lst = iter(lst)
print(next(it_lst))

"""
Вводится четырехзначное целое положительное число. Подумайте, как можно определить итератор для перебора его цифр. 
Выведите цифры этого введенного числа (с помощью итератора) в одну строчку через пробел.

Sample Input:   4387
Sample Output:  4 3 8 7
"""
num = input()
iter_num = iter(num)
for _ in range(len(num)):
    print(next(iter_num), end=' ')

# неожиданности распаковки
print(*input())
