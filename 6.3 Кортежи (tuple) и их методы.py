# 6.3 Кортежи (tuple) и их методы
""""""
"""
Одна из особенностей кортежей в том, что это неизменяемый тип данных.

Создаем пустой кортеж:

С помощью встроенной функции tuple()
a = tuple() 

С помощью литерала кортежа
a = ()
b = (1,)
c = (1, 2, 3)
d = 's',
e = tuple('hello')  # ('h', 'e', 'l', 'l', 'o')
"""

"""
Операции с кортежами

Все операции над списками, не изменяющие список (сложение, умножение на число, методы index() и count() и др.)



name_and_age = ('Bob', 42)

У кортежа есть длина, которую можно получить с помощью функции len()
tuple = (42,)  # (42,)
len(tuple)     # 1
pair = (1, 2)  # (1, 2)
len(pair)      # 2

(name, age) = name_and_age
name  # 'Bob'
age   # 42


Кортежи и множественное присваивание
(a, b, c) = (1, 2, 3)
a  # 1
b  # 2
c  # 3

a, b = b, a



def div_mod(a, b):
    quotient = a // b
    modulo = a % b
    return (quotient, modulo)  # возвращает два значения одновременно (Кортеж)

div_mod(13, 4)  # (3, 1)
"""



#  *   *   *   *   *   TASK    *   *   *   *   *

"""
Имеется кортеж:
t = (3.4, -56.7)
Вводится последовательность целых чисел в одну строчку через пробел. 
Необходимо их добавить в кортеж t.

(3.4, -56.7, 8, 11, -5, 2)
Input:  8 11 -5 2
Output: (3.4, -56.7, 8, 11, -5, 2)
"""
t = (3.4, -56.7)
s = tuple(map(int, input().split()))
print(t + s)

# Вариант
for el in input().split():
    t += (int(el),)

print(t)


"""
Вводятся названия городов в одну строку через пробел. 
На их основе формируется кортеж. Если в этом кортеже нет города "Москва", 
то следует его добавить в конец кортежа. 
Результат вывести на экран в виде строки с названиями городов через пробел.

Input:  Уфа Казань Самара
Output: Уфа Казань Самара Москва
"""
s = tuple(input().split())
if "Москва" in s:
    print(*s)
else:
    s += ("Москва",)
    print(*s)

# Вариант
s = tuple(input().split())
if 'Москва' not in s:
    s += ('Москва',)
print(*s)



"""
Вводятся названия городов в одну строку через пробел. На их основе формируется кортеж. 
Если в этом кортеже присутствует город "Ульяновск", 
то этот элемент следует удалить (создав новый кортеж).

Input:  Воронеж Самара Тольятти Ульяновск Пермь
Output: Воронеж Самара Тольятти Пермь
"""

s = tuple(input().split())
s_new = ()
if 'Ульяновск' in s:
    for el in s:
        if el != "Ульяновск":
            s_new += (el,)
    print(*s_new)
else:
    print(*s)

# # Вариант
s = tuple(input().split())
s_new = tuple(el for el in s if el != 'Ульяновск')
print(*s_new)


"""
Вводятся имена студентов в одну строчку через пробел. На их основе формируется кортеж. 
Отобразите на экране все имена из этого кортежа, которые содержат фрагмент "ва" (без учета регистра). 
Имена выводятся в одну строчку через пробел в нижнем регистре (малыми буквами).

Input:  Петя Варвара Венера Василиса Василий Федор
Output: варвара василиса василий
"""
s = tuple(input().lower().split())
s_new = tuple(el for el in s if "ва" in el)
print(*s_new)


"""
Вводятся целые числа в одну строку через пробел. На их основе формируется кортеж. 
Необходимо создать еще один кортеж с уникальными (не повторяющимися) значениями из первого кортежа. 

Input:  8 11 -5 -2 8 11 -5
Output: 8 11 -5 -2
"""
s = tuple(map(int, input().split()))
# s = list(map(int, input().split()))
t = tuple()
for el in s:
    if el not in t:
        t += el,
print(*t)


# Вариант
s = tuple(map(int, input().split()))  # (8, 11, -5, -2, 8, 11, -5)
# s = list(map(int, input().split()))  # [8, 11, -5, -2, 8, 11, -5]
t = dict.fromkeys(s)  # {8: None, 11: None, -5: None, -2: None}
t = tuple(t.keys())  # (8, 11, -5, -2)
print(*t)



"""
Вводятся целые числа в одну строку через пробел. На их основе формируется кортеж. 
Необходимо найти и вывести все индексы неуникальных (повторяющихся) значений в этом кортеже. 
Результат отобразите в виде строки чисел, записанных через пробел.
Input:  5 4 -3 2 4 5 10 11
Output: 0 1 4 5
"""
s = tuple(map(int, input().split()))
rez = [idx for idx, val in enumerate(s) if s.count(val) > 1]
print(*rez)

# Вариант
s = tuple(map(int, input().split()))
rez = [el for el in range(len(s)) if s.count(s[el]) > 1]
print(*rez)



"""
Имеется двумерный кортеж, размером 5 x 5 элементов:
t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))
Вводится натуральное число N (N < 5). 
Необходимо на основе кортежа t сформировать новый аналогичный кортеж t2 размером N x N элементов. 
Результат вывести на экран в виде таблицы чисел.
Input:  3
Output: 1 0 0
        0 1 0
        0 0 1
"""
# s = tuple(map(int, input().split()))

t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))

n = int(input())
t2 = tuple()

for el in range(n):
    t2 += (t[el][:n],)

for el in t2:
    print(*el)

# Вариант
t2 = tuple(t[el][:n] for el in range(n))
for el in t2:
    print(*el)



"""
Вводятся пункты меню (каждый пункт с новой строки) в формате:
название_1 URL-адрес_1
название_2 URL-адрес_2
...
название_N URL-адрес_N

Необходимо эту информацию представить в виде вложенного кортежа menu в формате:
((название_1, URL-адрес_1), (название_2, URL-адрес_2), ... (название_N, URL-адрес_N))

Результат вывести на экран в виде кортежа командой:
print(menu)

P. S. Для считывания списка целиком в программе уже записаны начальные строчки.
Input:  Главная home
        Python learn-python
        Java learn-java
        PHP learn-php
Output: (('Главная', 'home'), ('Python', 'learn-python'), ('Java', 'learn-java'), ('PHP', 'learn-php'))

"""
import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
# lst_in = ['Главная home', 'Python learn-python', 'Java learn-java', 'PHP learn-php']
menu = tuple()

for el in lst_in:
    menu += (tuple(el.split()),)
print(menu)

# Вариант
menu = tuple([tuple(el.split()) for el in lst_in])
print(menu)
