# 5.8 Генераторы списков (List comprehension)
""""""
"""
[<переменная, значение (действие)> for <объявление переменной> in <итерируемый объект>]
другими словами
[<способ формирования значения> for <переменная> in <итерируемый объект>]
переменная х существует только в [ ]

[x * 2 for x in range(5)]       # [0, 2, 4, 6, 8]
[2 for x in range(5)]           # [2, 2, 2, 2, 2]

s = input()                             #  1 2 3 4 5
d = [int(x) for x in s.split()]         #  [1, 2, 3, 4, 5]

Вариант
d = list(map(int, input().split()))     #  [1, 2, 3, 4, 5]

[<способ формирования значения> for <переменная> in <итерируемый объект>]
d = [2, 3, -5, 8, 7]
s = ["четное" if x % 2 == 0 else "нечетное" for x in d]
>>>  ['четное', 'нечетное', 'нечетное', 'четное', 'нечетное']

"""

"""
Вводятся вещественные числа в строку через пробел.
Необходимо на их основе сформировать список lst с помощью list comprehension (генератора списков)
из модулей введенных чисел (в списке должны храниться числа)
Input:   5.56 -8.7 1.0 3.14 -77.845
Output:  [5.56, 8.7, 1.0, 3.14, 77.845]
"""
s = list(map(float, input().split()))
s = [abs(el) for el in s]
print(s)

"""
Вводится натуральное число N. С помощью list comprehension сформировать двумерный список размером N x N, 
состоящий из нулей, а по главной диагонали - единицы. 
Главная диагональ - это элементы, идущие по диагонали от верхнего левого угла матрицы до ее нижнего правого угла. 
Результат вывести в виде таблицы чисел 
Input:   4
Output: 1 0 0 0
        0 1 0 0
        0 0 1 0
        0 0 0 1
"""
n = int(input())
s = [print(*[1 if k == el else 0 for k in range(n)]) for el in range(n)]

# Вариант
n = int(input())
for el in range(n):
    print(*[1 if k == el else 0 for k in range(n)])



"""
Вводятся названия городов в строку через пробел. 
Необходимо сформировать список с помощью list comprehension, 
содержащий названия длиной более пяти символов. 
Результат вывести в строчку через пробел.
Input:   Казань Уфа Москва Челябинск Омск Тур Самара
Output:  Казань Москва Челябинск Самара
"""
s = list(map(str, input().split()))
s = [el for el in s if len(el) > 5]
print(*s)

"""
Вводится натуральное число n. Необходимо сформировать список с помощью list comprehension, 
состоящий из делителей числа n (включая и само число n).
Результат вывести в строчку через пробел.
Input:   10
Output:  1 2 5 10
"""
n = int(input())
s = [el for el in range(1, n + 1) if n % el == 0]
print(*s)


"""
Вводится натуральное число N. 
Необходимо сгенерировать вложенный список с помощью list comprehension, размером N x N, 
где первая строка содержала бы все нули, вторая - все единицы, третья - все двойки и так до N-й строки. 
Результат вывести в виде таблицы чисел
Input:   4
Output: 0 0 0 0
        1 1 1 1
        2 2 2 2
        3 3 3 3
"""
n = int(input())
s = [print(*[el for k in range(n)]) for el in range(n)]

# отделяем print()
n = int(input())
s = [[el for k in range(n)] for el in range(n)]
for el in s:
    print(*el)


"""
Вводится список вещественных чисел. С помощью list comprehension сформировать список, 
состоящий из элементов введенного списка, имеющих четные индексы (то есть, выбрать все элементы с четными индексами). 
Результат вывести на экран в одну строку через пробел.
Input:   8.5 11.3 1.0 -4.5 11.34 6.45
Output: 8.5 1.0 11.34
"""
s = list(map(float, input().split()))
s = [el for el in s if s.index(el) % 2 == 0]
print(*s)


"""
Вводятся два списка целых чисел одинаковой длины каждый с новой строки. 
С помощью list comprehension сформировать третий список, 
состоящий из суммы соответствующих пар чисел введенных списков. 
Результат вывести на экран в одну строку через пробел.
Input:  1 2 3 4 5
        6 7 8 9 10
Output: 7 9 11 13 15
"""
s1 = list(map(int, input().split()))
s2 = list(map(int, input().split()))
s3 = [el1 + el2 for el1, el2 in zip(s1, s2)]
print(*s3)

s1 = list(map(int, input().split()))
s2 = list(map(int, input().split()))
s3 = [s1[k] + s2[k] for k in range(len(s1))]
print(*s3)

"""
Вводится список в формате: 
<город 1> <численность населения 1> <город 2> <численность населения 2> ... <город N> <численность населения N>
Необходимо с помощью list comprehension сформировать список lst, содержащий вложенные списки из пар:
<город> <численность населения> 
где тип значения <численность населения> - целое число.
Input:  Москва 15000 Уфа 1200 Самара 1090 Казань 1300
Output: [['Москва', 15000], ['Уфа', 1200], ['Самара', 1090], ['Казань', 1300]]
"""
s = list(map(str, input().split()))
s = [[s[i], int(s[i + 1])] for i in range(0, len(s) - 1, 2)]  # range(0, 5, 2) - 3-й аргумент, это шаг
# s = [[s[i], int(s[i + 1])] for i in range(0, len(s) - 1) if i % 2 == 0]
print(s)

